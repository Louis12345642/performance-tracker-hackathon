name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users from the database.'
      description: |-
        methods: index() returns a listing of all users from the
                database
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"name":"Mr. Isadore Bogan V","secondtName":"Steve Prosacco","phone":"203-703-1808","rollNumber":"1-630-229-0398","email":"demond.cole@example.com","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":2,"name":"Mrs. Lenna Rodriguez","secondtName":"Esmeralda Hammes Sr.","phone":"+1.657.961.2093","rollNumber":"+1-781-521-7094","email":"bernie.koepp@example.net","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":3,"name":"Miss Lera Kovacek","secondtName":"Elaina Lynch","phone":"234.625.2542","rollNumber":"+13516367943","email":"block.christian@example.net","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":4,"name":"Shanny Stehr","secondtName":"Vincenzo Legros","phone":"1-513-854-9706","rollNumber":"+1-469-402-7356","email":"baylee80@example.net","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":5,"name":"Joseph Torphy","secondtName":"Astrid Hahn II","phone":"213-493-4438","rollNumber":"(828) 884-0711","email":"eldora35@example.org","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":6,"name":"Cristian Hintz","secondtName":"Ms. Jalyn Hoeger","phone":"+1.302.975.6395","rollNumber":"680.854.5312","email":"khyatt@example.com","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":7,"name":"Mr. Xzavier Connelly DDS","secondtName":"Delta Hauck","phone":"(520) 359-1451","rollNumber":"+1-786-466-8628","email":"melvina97@example.org","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":8,"name":"Florencio Hoeger","secondtName":"Arielle Rice V","phone":"+1 (415) 646-7274","rollNumber":"1-920-422-4145","email":"whill@example.net","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":9,"name":"Kaden Grant","secondtName":"Raymond Considine DVM","phone":"+1.909.822.0404","rollNumber":"+17048826278","email":"fisher.dayana@example.net","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":10,"name":"Camren Bechtelar I","secondtName":"Mrs. Petra Beier DVM","phone":"+15643316180","rollNumber":"1-678-721-1777","email":"jkuphal@example.com","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"name":"Mr. Isadore Bogan V","secondtName":"Steve Prosacco","phone":"203-703-1808","rollNumber":"1-630-229-0398","email":"demond.cole@example.com","email_verified_at":"2025-01-01T18:49:58.000000Z","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/assign-course
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'assigns a course to a user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"title":"Mr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":2,"title":"Dr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":3,"title":"Prof.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":4,"title":"Mrs.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":5,"title":"Dr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":6,"title":"Dr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":7,"title":"Dr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":8,"title":"Mrs.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":9,"title":"Dr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"},{"id":10,"title":"Miss","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: esse
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"title":"Mr.","created_at":"2025-01-01T18:49:58.000000Z","updated_at":"2025-01-01T18:49:58.000000Z"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/roles/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles/assign-role
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        assigns a role to the user by inserting and attacching user_is
         to role_id in the pivot table
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/courses/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/courses/students
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:3000'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/courses/assigment/submit/{assigment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'submits the assigment to of the user by making the stutus to true.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      assigment_id:
        name: assigment_id
        description: 'The ID of the assigment.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      assigment_id: dolorem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
